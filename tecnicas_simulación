# -*- coding: utf-8 -*- 

###########################################################################
## Python code generated with wxFormBuilder (version Mar  1 2018)
## http://www.wxformbuilder.org/
##
## PLEASE DO *NOT* EDIT THIS FILE!
###########################################################################

import wx
import wx.xrc

###########################################################################
## Class MyFrame1
###########################################################################

class MyFrame1 ( wx.Frame ):
	
	def __init__( self, parent ):
		wx.Frame.__init__ ( self, parent, id = wx.ID_ANY, title = wx.EmptyString, pos = wx.DefaultPosition, size = wx.Size( 400,500 ), style = wx.DEFAULT_FRAME_STYLE|wx.TAB_TRAVERSAL )
		
	#	self.SetSizeHints( wx.DefaultSize, wx.DefaultSize )
		
		bSizer1 = wx.BoxSizer( wx.VERTICAL )
		
		self.lblaleatorio = wx.StaticText( self, wx.ID_ANY, u"Ingrese la cantidad de n√∫meros aleatorios: ", wx.DefaultPosition, wx.DefaultSize, 0 )
		self.lblaleatorio.Wrap( -1 )
		bSizer1.Add( self.lblaleatorio, 0, wx.ALL|wx.EXPAND, 10 )
		
		bSizer1.Add( ( 0, 0), 1, wx.EXPAND, 5 )
		
		self.txtaleatorio = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )
		bSizer1.Add( self.txtaleatorio, 0, wx.ALL|wx.EXPAND, 10 )
		
		bSizer1.Add( ( 0, 0), 1, wx.EXPAND, 5 )
		
		self.lblsemilla = wx.StaticText( self, wx.ID_ANY, u"Ingrese el valor de la semilla: ", wx.DefaultPosition, wx.DefaultSize, 0 )
		self.lblsemilla.Wrap( -1 )
		bSizer1.Add( self.lblsemilla, 0, wx.ALL|wx.EXPAND, 10 )
		
		
		bSizer1.Add( ( 0, 0), 1, wx.EXPAND, 5 )
		
		self.txtsemilla = wx.TextCtrl( self, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )
		bSizer1.Add( self.txtsemilla, 0, wx.ALL|wx.EXPAND, 10 )

		
		
		bSizer1.Add( ( 0, 0), 1, wx.EXPAND, 5 )
		
		self.btncalcular = wx.Button( self, wx.ID_ANY, u"Calcular", wx.DefaultPosition, wx.DefaultSize, 0 )
		bSizer1.Add( self.btncalcular, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALL, 10 )
		
		
		bSizer1.Add( ( 0, 0), 1, wx.EXPAND, 5 )
		
		self.lblmostrar = wx.StaticText( self, wx.ID_ANY, u"", wx.DefaultPosition, wx.DefaultSize, 0 )
		self.lblmostrar.Wrap( -1 )
		bSizer1.Add( self.lblmostrar, 0, wx.ALL|wx.EXPAND, 10 )
		self.lblmostrar.SetMinSize( wx.Size( 400,200 ) )
		
		
		bSizer1.Add( ( 0, 0), 1, wx.EXPAND, 5 )
		
		
		self.btnsalir = wx.Button( self, wx.ID_ANY, u"Salir", wx.DefaultPosition, wx.DefaultSize, 0 )
		bSizer1.Add( self.btnsalir, 0, wx.ALIGN_RIGHT|wx.ALL, 10 )
		
		
		self.SetSizer( bSizer1 )
		self.Layout()
		
		self.Centre( wx.BOTH )
		
		# Connect Events
		self.btncalcular.Bind( wx.EVT_BUTTON, self.OnClick )
		self.btnsalir.Bind( wx.EVT_BUTTON, self.OnExit)
	
	def __del__( self ):
		pass
	
	
	# Virtual event handlers, overide them in your derived class
	def OnClick( self, event ):
		resultado = int (self.txtaleatorio.GetValue())
		resultado1 = int (self.txtsemilla.GetValue())
		lista1 = []
		lista2 = []
		for i in range(resultado):
			s2=str(resultado1**2)
			x=2*len(str(resultado1))
			ls=len(s2)
			if(ls<x):
				dif=x-ls
				for j in range(dif):
					s2="0"+s2
			s3=s2[1:5]
			if(len(s2)==4):
				s3=s2
			if(len(s2)==6):
				s3=s2[1:5]
			if(len(s2)==8):
				s3=s2[2:6]
			s4=int(s3)/10000.0
			resultado1=int(s3)
			self.lblmostrar.SetLabel("Resultado: "+lista1.append(int(s3))+"    ----->    " +lista2.append(int(s4)))
			
	def OnExit(self, evet):
		self.Close()

if __name__ == '__main__':
	app = wx.App()
	fr = MyFrame1(None)
	fr.Show()
	app.MainLoop()
